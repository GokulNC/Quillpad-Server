<QuillLanguage lang="English" script="English" deffont="Arial" epsilon="î€€">
	<tree key="?" type="predictive">
		<node id="2">
			<split-rule>
				<rel-index>-1</rel-index>
				<context-id>-1</context-id>
				<feature>('?', 'Is letter ??')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="1">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("t er",9888)]</classes>
		</node>
		<node id="4">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('?', 'Is letter ??')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="3">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("m ih s",9888)]</classes>
		</node>
		<node id="6">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('=', 'Is letter =?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="5">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("s t",3060), ("m ih s",143)]</classes>
		</node>
		<node id="10">
			<split-rule>
				<rel-index>-1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#250;', 'Is letter &#250;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="8">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('_', 'Is letter _?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="7">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("r ay v",2878)]</classes>
		</node>
		<node id="9">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("g",51)]</classes>
		</node>
		<node id="20">
			<split-rule>
				<rel-index>4</rel-index>
				<context-id>-1</context-id>
				<feature>('_', 'Is letter _?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="12">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('!', 'Is letter !?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="11">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("jh",905)]</classes>
		</node>
		<node id="18">
			<split-rule>
				<rel-index>-4</rel-index>
				<context-id>-1</context-id>
				<feature>('#', 'Is letter #?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="14">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#255;', 'Is letter &#255;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="13">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("er",716)]</classes>
		</node>
		<node id="16">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#243;', 'Is letter &#243;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="15">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("jh",20)]</classes>
		</node>
		<node id="17">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("#",1342)]</classes>
		</node>
		<node id="19">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("er",1253)]</classes>
		</node>
		<node id="22">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('d', 'Is letter d?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="21">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("r",1230)]</classes>
		</node>
		<node id="32">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('_', 'Is letter _?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="24">
			<split-rule>
				<rel-index>-1</rel-index>
				<context-id>-1</context-id>
				<feature>('#', 'Is letter #?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="23">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("k y uw",764)]</classes>
		</node>
		<node id="26">
			<split-rule>
				<rel-index>-1</rel-index>
				<context-id>-1</context-id>
				<feature>('=', 'Is letter =?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="25">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("r iy t",470)]</classes>
		</node>
		<node id="28">
			<split-rule>
				<rel-index>-1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#241;', 'Is letter &#241;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="27">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("b",259)]</classes>
		</node>
		<node id="30">
			<split-rule>
				<rel-index>-1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#165;', 'Is letter &#165;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="29">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("r ay v",177)]</classes>
		</node>
		<node id="31">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("ao",10)]</classes>
		</node>
		<node id="36">
			<split-rule>
				<rel-index>-4</rel-index>
				<context-id>-1</context-id>
				<feature>('&#254;', 'Is letter &#254;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="34">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#251;', 'Is letter &#251;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="33">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("#",524)]</classes>
		</node>
		<node id="35">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("ah",508)]</classes>
		</node>
		<node id="42">
			<split-rule>
				<rel-index>-1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#244;', 'Is letter &#244;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="38">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#253;', 'Is letter &#253;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="37">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("ah",151)]</classes>
		</node>
		<node id="40">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#231;', 'Is letter &#231;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="39">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("k",6)]</classes>
		</node>
		<node id="41">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("f",134)]</classes>
		</node>
		<node id="46">
			<split-rule>
				<rel-index>-1</rel-index>
				<context-id>-1</context-id>
				<feature>('#', 'Is letter #?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="44">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('A', 'Is letter A?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="43">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("jh",37)]</classes>
		</node>
		<node id="45">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("d",15)]</classes>
		</node>
		<node id="52">
			<split-rule>
				<rel-index>2</rel-index>
				<context-id>-1</context-id>
				<feature>('_', 'Is letter _?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="48">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#247;', 'Is letter &#247;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="47">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("ih",10)]</classes>
		</node>
		<node id="50">
			<split-rule>
				<rel-index>1</rel-index>
				<context-id>-1</context-id>
				<feature>('&#254;', 'Is letter &#254;?')</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>False</terminal>
			<classes>[]</classes>
		</node>
		<node id="49">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("l",9)]</classes>
		</node>
		<node id="51">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("oy",9)]</classes>
		</node>
		<node id="53">
			<split-rule>
				<rel-index>0</rel-index>
				<context-id>-1</context-id>
				<feature>()</feature>
			</split-rule>
			<context-len>6</context-len>
			<terminal>True</terminal>
			<classes>[("k",2125)]</classes>
		</node>
	</tree>
</QuillLanguage>